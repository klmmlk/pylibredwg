name: Github CI
on:
  push:
    branches:
      - main
    tags:
      - '0.*.*'
      - '0.*'
  workflow_dispatch:

jobs:
  mingw:
    name: mingw
    runs-on: windows-latest
    env:
      MSYS2_DIR: msys64
      MSYS2_ARCH: x86_64
      MSYSTEM: MINGW64
      ARCH: win64
      PLATFORM: x64

    steps:
    - name: setup-msys2
      uses: msys2/setup-msys2@v2
      with:
        path-type: minimal
        update: true
        install: >-
          git
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-libtool
          mingw-w64-x86_64-libiconv
          mingw-w64-x86_64-libxml2
          mingw-w64-x86_64-swig
          mingw-w64-x86_64-python3
          libtool
          autoconf-wrapper
          automake-wrapper
          texinfo
          gperf
          mingw-w64-x86_64-perl
          mingw-w64-x86_64-pcre2

    - run: reg add "HKLM\Software\Microsoft\Windows\Windows Error Reporting" /f /v DontShowUI /d 1

    - name: 安装pip
      shell: msys2 {0}
      run: |
        which python
        python --version
        pacman -Sy
        pacman -S --noconfirm mingw-w64-x86_64-python-pip

    - name: 重新安装 pip
      shell: msys2 {0}
      run: |
        python -m ensurepip --upgrade
        python -m pip install --upgrade pip
        python -m pip install distlib

    - name: 安装setuptools build installer
      shell: msys2 {0}
      run: /mingw64/bin/pip install --upgrade setuptools build installer

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Cache build files
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache
          ./build
        key: ${{ runner.os }}-build-${{ hashFiles('**/Makefile.am', '**/configure.ac', '**/src/*.c', '**/src/*.h') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: 检查缓存
      id: cache-check
      shell: bash
      run: |
        if [[ -f build/Makefile ]]; then
          echo "cache_hit=true" >> $GITHUB_OUTPUT
        else
          echo "cache_hit=false" >> $GITHUB_OUTPUT
        fi

    - name: 开始编译
      if: steps.cache-check.outputs.cache_hit == 'false'
      shell: msys2 {0}
      run: |
        sh ./autogen.sh
        ./configure --disable-dependency-tracking --enable-check-less
        export BUILD_DIR=build
        make -j
      continue-on-error: true

    - if: failure()
      shell: msys2 {0}
      run: make -C src dwg_api.i; tar cfz mingw-failure.tgz src/dwg_api.i src/config.h

    - if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: mingw-failure.tgz
        path: mingw-failure.tgz

      

    - shell: msys2 {0}
      run: /mingw64/bin/python -m build

    - shell: msys2 {0}
      run: |
        /mingw64/bin/python -m installer dist/*.whl

    - name: Test Python Binding
      shell: msys2 {0}
      run: |
        python -c "import sys; print(sys.path)"
        python -c "import libredwg; print('libredwg imported successfully')"
